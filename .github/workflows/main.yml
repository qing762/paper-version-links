name: Build API & Checking

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Ensure code is working as expected
        run: |
          python main.py

      - name: Lint & Validate links
        run: |
          python lib/validate.py paper-versions.json

      - name: Zip repo files
        uses: papeloto/action-zip@v1
        with:
          files: . '!./.git/**/*'
          dest: release.zip

      - name: Publish code
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: release.zip
          name: "Release v1.${{ github.run_number }}"
          body: "Commit: ${{ github.sha }}\nDownload the `release.zip` file and you are good to go!\nContinue by following the steps given in the README."
          tag_name: ${{ github.ref_name }}
  deploy:
    needs: build
    if: github.ref == 'refs/heads/master' && github.repository == 'qing762/paper-versions-links'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download paper-versions.json
        uses: actions/download-artifact@v2
        with:
          name: paper-versions.json
          path: .

      - name: Upload code to API
        run: |
          python lib/upload.py
        env:
          apiUploadURL: ${{ secrets.apiUploadURL }}
          apiUploadPASS: ${{ secrets.apiUploadPASS }}